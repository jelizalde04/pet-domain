name: Get All Pets Deploy
on:
  push:
    branches: [test]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./get-all-pets
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/get-all-pets:latest
          build-args: |
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan ${{ secrets.GET_ALL_PETS_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Verify SSH connection
        run: ssh -i ~/.ssh/ec2_key ubuntu@${{ secrets.GET_ALL_PETS_EC2_HOST }} "echo 'SSH connection successful!'"

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/ec2_key ubuntu@${{ secrets.GET_ALL_PETS_EC2_HOST }} << 'EOF'
          # Stop and remove existing container
          sudo docker stop get-all-pets || true
          sudo docker rm get-all-pets || true
          
          # Pull the latest image from Docker Hub
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/get-all-pets:latest
          
          # Run new container with environment variables
          sudo docker run -d \
           --name get-all-pets \
           -p 3001:3001 \
           --restart unless-stopped \
          -e DB_NAME=${{ secrets.DB_NAME }} \
          -e DB_USER=${{ secrets.DB_USER }} \
          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -e DB_HOST=${{ secrets.DB_HOST }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          "${{ secrets.DOCKERHUB_USERNAME }}get-all-pets:latest"

          # Verify container is running
          sudo docker ps | grep get-all-pets
          EOF
